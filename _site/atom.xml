<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
    <title type="text" xml:lang="en">Dan Larson</title>
    <link type="application/atom+xml" rel="self" href="http://localhost:3000/atom.xml"/>
  
  <link href="http://localhost:3000/"/>
  <id>http://localhost:3000/</id>
  <updated>2018-01-10T20:27:50Z</updated>
  <author>
    <name>Dan Larson</name>
    <email>dwlarson10@gmail.com</email>
  </author>
  <rights type="text">Copyright Â© 2018 Dan Larson. All rights reserved.</rights>
  
  <entry>
  <title type="text">Building a Strava Dashboard Post 1: Extracting Data</title>
  <link rel="alternate" type="text/html" href="http://localhost:3000/StravaExtract.html" />
  <id>http://localhost:3000/StravaExtract</id>
  <published>2017-10-21T00:00:00Z</published>
  <updated>2017-10-21T00:00:00Z</updated>
  <content type="html"><![CDATA[ <h1 id="what-is-the-project">What is the project?</h1>

<p>The goal of this blog is for me to share various techniques as I learn them. The next series of posts is my attempt at learning to build a dashboard for my Strava data. I am training for a Half in December and what better way to stay motivated than to monitor my progress. In this post, I will extract the Strava data using their API and build a few visualizations to see if I have any patterns.</p>

<h2 id="extracting-data-from-strava">Extracting data from Strava.</h2>

<p>The first step is to set up the API to pull. Before you can write any code you need to set up your Strava app [<a href="https://www.strava.com/settings/api">https://www.strava.com/settings/api</a>]. Once you have set up your Strava app you can extract data.</p>

<p>The code below sets up the key, authorization and access. Then it sets up the authentication token. Next, we use the jsonlite package to do the actual data extraction.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">httr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">httpuv</span><span class="p">)</span><span class="w">
</span><span class="n">my_app</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">oauth_app</span><span class="p">(</span><span class="s2">"strava"</span><span class="p">,</span><span class="w">
                    </span><span class="n">key</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"[your key]"</span><span class="p">,</span><span class="w">
                    </span><span class="n">secret</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"[your secret key]"</span><span class="w">
</span><span class="p">)</span><span class="w">


</span><span class="n">my_endpoint</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">oauth_endpoint</span><span class="p">(</span><span class="w">
  </span><span class="n">request</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="p">,</span><span class="w">
  </span><span class="n">authorize</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"https://www.strava.com/oauth/authorize"</span><span class="p">,</span><span class="w">
  </span><span class="n">access</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"https://www.strava.com/oauth/token"</span><span class="w">
</span><span class="p">)</span><span class="w">


</span><span class="n">sig</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">oauth2.0_token</span><span class="p">(</span><span class="n">my_endpoint</span><span class="p">,</span><span class="w"> </span><span class="n">my_app</span><span class="p">,</span><span class="w"> </span><span class="n">scope</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"view_private"</span><span class="p">,</span><span class="w">  
                      </span><span class="n">type</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="p">,</span><span class="w"> </span><span class="n">use_oob</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="n">as_header</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">   
                      </span><span class="n">use_basic_auth</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w">
                      </span><span class="n">cache</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">




</span><span class="n">library</span><span class="p">(</span><span class="n">jsonlite</span><span class="p">)</span><span class="w">
</span><span class="n">jsonData</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">fromJSON</span><span class="p">(</span><span class="s2">"https://www.strava.com/api/v3/athlete/activities?access_token=cb576993aa710c4bf32ac7b9a006a0f110add218&amp;per_page=200"</span><span class="p">,</span><span class="n">flatten</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Once I have loaded the data into our R console, I can start working with it. There are already 49 variables but there are a few that still need some work. First, we turn the data set into a tibble. A tibble is similar to a dataframe but interacts with the Tidyverse. We can then use the Mutate function to create the variables we want. We first modify the date to be a more R friendly format. Next we turn the distance variable from meters to miles. We then create a year, month, weekday, and hour of day variables from the time. For now, these variables are all we need. However, if we decide that we want more we can away use the mutate variable to quickly add more.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">require</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Loading required package: tidyverse

## Loading tidyverse: ggplot2
## Loading tidyverse: tibble
## Loading tidyverse: tidyr
## Loading tidyverse: readr
## Loading tidyverse: purrr
## Loading tidyverse: dplyr

## Warning: package 'dplyr' was built under R version 3.4.2

## Conflicts with tidy packages ----------------------------------------------

## filter(): dplyr, stats
## lag():    dplyr, stats
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">require</span><span class="p">(</span><span class="n">lubridate</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Loading required package: lubridate

##
## Attaching package: 'lubridate'

## The following object is masked from 'package:base':
##
##     date
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">strava</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">as.tibble</span><span class="p">(</span><span class="n">jsonData</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">start_date_local</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ymd_hms</span><span class="p">(</span><span class="n">start_date_local</span><span class="p">),</span><span class="w">
         </span><span class="n">miles</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">distance</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="m">1609.344</span><span class="p">,</span><span class="w">
         </span><span class="n">year</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">year</span><span class="p">(</span><span class="n">start_date_local</span><span class="p">),</span><span class="w">
         </span><span class="n">wday</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">wday</span><span class="p">(</span><span class="n">start_date_local</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">),</span><span class="w">
         </span><span class="n">month</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">month</span><span class="p">(</span><span class="n">start_date_local</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">),</span><span class="w">
         </span><span class="n">hour</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">hour</span><span class="p">(</span><span class="n">start_date_local</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<h2 id="quick-static-analysis">Quick static analysis</h2>

<p>To start, I looked at what my running distance by month has been since starting to run in 2015. Interestingly, I steadily ran more in 2015 than I did last year. However, this year I am on track to have run more.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">strava</span><span class="o">%&gt;%</span><span class="n">group_by</span><span class="p">(</span><span class="n">year</span><span class="p">,</span><span class="n">month</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">distance</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">miles</span><span class="p">),</span><span class="n">heart</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">average_heartrate</span><span class="p">),</span><span class="n">runs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">month</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="n">distance</span><span class="p">,</span><span class="n">group</span><span class="o">=</span><span class="n">year</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">year</span><span class="p">)))</span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">'identity'</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Total distance by month of year"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://danlarson.io/static/img/TotalDistance-1.png" alt="Total distance by month" /></p>

<p>This could be deceiving especially knowing when I typically do half marathons. So, I also looked at the average length for each month. By adding this view of the data I am able to learn that while I ran more miles in 2015 than in 2016 my average run for each month was longer in 2016. By create a dashboard for these data, I will be able to remind myself of the trend I am hoping to create and hopefully encourage myself to meet my goals.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">strava</span><span class="o">%&gt;%</span><span class="n">group_by</span><span class="p">(</span><span class="n">year</span><span class="p">,</span><span class="n">month</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">distance</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">miles</span><span class="p">),</span><span class="n">heart</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">average_heartrate</span><span class="p">),</span><span class="n">runs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">month</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="n">distance</span><span class="p">,</span><span class="n">group</span><span class="o">=</span><span class="n">year</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">year</span><span class="p">)))</span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">'identity'</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Average distance by month of year"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://danlarson.io/static/img/AverageDistance-1.png" alt="Average distance by month" /></p>

<p>In addition to running further I have also been training to go faster. While some of my efforts appear to have worked in the beginning of 2017, I have a ways to go to break out of the pace I appear to be currently occupying.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">strava</span><span class="o">%&gt;%</span><span class="n">group_by</span><span class="p">(</span><span class="n">year</span><span class="p">,</span><span class="n">month</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">distance</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">miles</span><span class="p">),</span><span class="w"> </span><span class="n">speed</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">average_speed</span><span class="o">*</span><span class="p">(</span><span class="m">25</span><span class="o">/</span><span class="m">11</span><span class="p">)),</span><span class="n">heart</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">average_heartrate</span><span class="p">),</span><span class="n">runs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">month</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="n">speed</span><span class="p">,</span><span class="n">group</span><span class="o">=</span><span class="n">year</span><span class="p">,</span><span class="n">color</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">year</span><span class="p">)))</span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">(</span><span class="n">stat</span><span class="o">=</span><span class="s1">'identity'</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">geom_point</span><span class="p">()</span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Average Speed by month of year"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>
<p><img src="http://danlarson.io/static/img/AverageSpeed-1.png" alt="Average distance by month" /></p>

<p>In this post, I shared how to extract data using an R script and created a few charts that demonstrated why I am looking to build a dashboard to help improve my running routine. The next steps will be to learn write a shiny app to extract the Strava data when needed and build a dashboard. I hope to use the package FlexDashboards by RStudio to create the dashboard.</p>

<p>If you found this interesting please let me know by finding me on Twitter.</p>
 ]]></content>
</entry>


  <entry>
  <title type="text">Using the Tidyverse to analyze the location of Confederate Memorials</title>
  <link rel="alternate" type="text/html" href="http://localhost:3000/post3.html" />
  <id>http://localhost:3000/post3</id>
  <published>2017-10-04T00:00:00Z</published>
  <updated>2017-10-04T00:00:00Z</updated>
  <content type="html"><![CDATA[ <h2 id="data">Data</h2>

<p>Following the incident in Charlottesville VA this summer, I wanted to know just how many confederate memorials there were. I reached out on Data for Democracy and found a report published by the SPLC. I then scraped the PDG and created a data set. I know it isnât complete, but it is a great start. I have published the data set on Data.World here: <a href="https://data.world/datadanlarson/confederatemonument">https://data.world/datadanlarson/confederatemonument</a></p>

<p>This post is a combination of where these memorials are located and a quick tutorial on how to use the tidyverse to analyze it.</p>

<h2 id="dataworld">Data.World</h2>

<p>First, let me give a shout out to data.world. If you are training to be a data scientist this is a great place to get and share data sets. There is an added bonus of getting to work with SQL to extract data.</p>

<p>Below is the sequence needed to extract data from data.world.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#Load the package</span><span class="w">
</span><span class="n">require</span><span class="p">(</span><span class="n">data.world</span><span class="p">)</span><span class="w">

</span><span class="c1"># Setup your token</span><span class="w">
</span><span class="n">data.world</span><span class="o">::</span><span class="n">set_config</span><span class="p">(</span><span class="n">data.world</span><span class="o">::</span><span class="n">save_config</span><span class="p">(</span><span class="n">auth_token</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"YOUR_DATA.WORLD_TOKEN))

#identify the data source
link &lt;- "</span><span class="n">https</span><span class="o">://</span><span class="n">data.world</span><span class="o">/</span><span class="n">datadanlarson</span><span class="o">/</span><span class="n">confederatemonument</span><span class="s2">"

#extract the data
confMon &lt;- data.world::query(
  data.world::qry_sql("</span><span class="n">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">FROM</span><span class="w"> </span><span class="n">CivilWarMamorials</span><span class="err">"</span><span class="p">),</span><span class="w">
  </span><span class="n">dataset</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">link</span><span class="w">
</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<h2 id="tibbles">Tibbles</h2>

<p>Once you have the data in memory, you can transform it to a tibble. A tibble is similar to a Dataframe but a little different. I recommend reading Data Science with R by Garrett Grolemund and Hadley Wickham if you want to know more. For know, just know that they allow for easy data pipping that we will be using shortly.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">require</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">as.tibble</span><span class="p">(</span><span class="n">confMon</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 1,528 x 6
##             state         city             nameofartifact
##             &lt;chr&gt;        &lt;chr&gt;                      &lt;chr&gt;
##  1        Alabama     Anniston Major John Pelham Monument
##  2        Alabama     Ashville       Confederate Monument
##  3        Alabama  Centreville       Confederate Monument
##  4        Alabama        Selma   Selma Navy Yard Memorial
##  5 South Carolina St. Matthews           âLest We Forgetâ
##  6 South Carolina St. Matthews             Stonewall Lane
##  7 South Carolina  Summerville           Beauregard Court
##  8 South Carolina  Summerville            Stonewall Drive
##  9 South Carolina Timmonsville       Robert E. Lee Avenue
## 10 South Carolina Timmonsville            Stonewall Drive
## # ... with 1,518 more rows, and 3 more variables: type &lt;chr&gt;, year &lt;chr&gt;,
## #   civilwarstatus &lt;chr&gt;
</code></pre></div></div>

<h2 id="summarizing-with-tidyverse">Summarizing with tidyverse</h2>

<p>The main benefit of using a tibble over a dataframe is the ease with which you can summaries your data. Without a tibble you may need to take multiple steps to subset, transform, and summarize your data. With a tibble you can do all of this with a singe chain of commands. In the code below, I am able to filter the data set to only monuments, create a table of counts by state and sort the table in only five rows of text. Additionally, I did not need to create a new dataframe.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">as.tibble</span><span class="p">(</span><span class="n">confMon</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w"> </span><span class="c1"># Create the tibble</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">state</span><span class="p">,</span><span class="n">civilwarstatus</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w"> </span><span class="c1"># Set the group by</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">type</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'Monument'</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">count</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="o">%&gt;%</span><span class="w"> </span><span class="c1"># Determine how you want to summarise</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="n">desc</span><span class="p">(</span><span class="n">count</span><span class="p">))</span><span class="w"> </span><span class="c1"># Organize the data</span><span class="w">
</span></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 24 x 3
## # Groups:   state [24]
##             state    civilwarstatus count
##             &lt;chr&gt;             &lt;chr&gt; &lt;int&gt;
##  1 North Carolina Confederate State    50
##  2        Georgia Confederate State    49
##  3       Virginia Confederate State    45
##  4       Kentucky      Border State    35
##  5 South Carolina Confederate State    34
##  6        Alabama Confederate State    31
##  7          Texas Confederate State    26
##  8      Louisiana Confederate State    23
##  9    Mississippi Confederate State    22
## 10       Arkansas Confederate State    21
## # ... with 14 more rows
</code></pre></div></div>

<h2 id="first-visualization">First Visualization</h2>

<p>An additional benifit of using the tidyverse is that you can pipe in the ggplot2 commands. The tidyverse package allows you to do both data transformation and visualization within one string of commands. In the code below I have added the ggplot2 commands needed to create a bar chart. I want to point out that by using the tidyverse, I have been able to keep my code relatively clean and havenât needed to create any new dataframes.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">as.tibble</span><span class="p">(</span><span class="n">confMon</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">state</span><span class="p">,</span><span class="n">civilwarstatus</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">count</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="n">desc</span><span class="p">(</span><span class="n">count</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">()</span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">reorder</span><span class="p">(</span><span class="n">state</span><span class="p">,</span><span class="n">count</span><span class="p">),</span><span class="n">y</span><span class="o">=</span><span class="n">count</span><span class="p">,</span><span class="n">fill</span><span class="o">=</span><span class="n">civilwarstatus</span><span class="p">),</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'identity'</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Number of civil war monuments by state"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://danlarson.io/static/img/unnamed-chunk-2-1.png" alt="Where are confederate monuments" /></p>

<p>While the visual above gets the job done, it is always important to clean up your visuals for publication. Using ggplot2 allows the analyst to make all of the needed adjustments to background, the legend, and other various elements to brand your visuals.</p>

<p>Looking at the data we can see that there are some obvious patterns. First, the states with the most memorials are states that belonged to the confederacy. However, some boarder states have a number of memorials. As we will see in the map below, the majority of the memorials are in the south east of the country. However, there is are a surprising number in the North West.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">as.tibble</span><span class="p">(</span><span class="n">confMon</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">state</span><span class="p">,</span><span class="n">civilwarstatus</span><span class="p">)</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">count</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="n">desc</span><span class="p">(</span><span class="n">count</span><span class="p">))</span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">()</span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">reorder</span><span class="p">(</span><span class="n">state</span><span class="p">,</span><span class="n">count</span><span class="p">),</span><span class="n">y</span><span class="o">=</span><span class="n">count</span><span class="p">,</span><span class="n">fill</span><span class="o">=</span><span class="n">civilwarstatus</span><span class="p">),</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'identity'</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">coord_flip</span><span class="p">()</span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Number of civil war monuments by state"</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="c1">#set theme to black and white</span><span class="w">
  </span><span class="n">theme_bw</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">panel.background</span><span class="o">=</span><span class="n">element_rect</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="s2">"#F0F0F0"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">plot.background</span><span class="o">=</span><span class="n">element_rect</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="s2">"#F0F0F0"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">panel.border</span><span class="o">=</span><span class="n">element_rect</span><span class="p">(</span><span class="n">colour</span><span class="o">=</span><span class="s2">"#F0F0F0"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="c1"># Format the grid</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">panel.grid.major</span><span class="o">=</span><span class="n">element_line</span><span class="p">(</span><span class="n">colour</span><span class="o">=</span><span class="s2">"#D0D0D0"</span><span class="p">,</span><span class="n">size</span><span class="o">=</span><span class="m">.75</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.ticks</span><span class="o">=</span><span class="n">element_blank</span><span class="p">())</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="c1"># Dispose of the legend</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">plot.title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">face</span><span class="o">=</span><span class="s2">"bold"</span><span class="p">,</span><span class="n">hjust</span><span class="o">=</span><span class="m">0</span><span class="p">,</span><span class="n">vjust</span><span class="o">=</span><span class="m">2</span><span class="p">,</span><span class="n">colour</span><span class="o">=</span><span class="s2">"#3C3C3C"</span><span class="p">,</span><span class="n">size</span><span class="o">=</span><span class="m">14</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Number of memorials"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"State"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text.x</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">11</span><span class="p">,</span><span class="n">colour</span><span class="o">=</span><span class="s2">"#535353"</span><span class="p">,</span><span class="n">face</span><span class="o">=</span><span class="s2">"bold"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text.y</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">11</span><span class="p">,</span><span class="n">colour</span><span class="o">=</span><span class="s2">"#535353"</span><span class="p">,</span><span class="n">face</span><span class="o">=</span><span class="s2">"bold"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.title.y</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">11</span><span class="p">,</span><span class="n">colour</span><span class="o">=</span><span class="s2">"#535353"</span><span class="p">,</span><span class="n">face</span><span class="o">=</span><span class="s2">"bold"</span><span class="p">,</span><span class="n">vjust</span><span class="o">=</span><span class="m">1.5</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.title.x</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">11</span><span class="p">,</span><span class="n">colour</span><span class="o">=</span><span class="s2">"#535353"</span><span class="p">,</span><span class="n">face</span><span class="o">=</span><span class="s2">"bold"</span><span class="p">,</span><span class="n">vjust</span><span class="o">=</span><span class="m">-.5</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="c1"># Plot margins and finally line annotations</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">plot.margin</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unit</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">.5</span><span class="p">,</span><span class="w"> </span><span class="m">.7</span><span class="p">),</span><span class="w"> </span><span class="s2">"cm"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">legend.position</span><span class="o">=</span><span class="s2">"bottom"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://danlarson.io/static/img/unnamed-chunk-3-1.png" alt="Where are confederate monuments - formatted" /></p>

<h1 id="mapping-with-the-tidyverse">Mapping with the tidyverse</h1>

<p>The visual above demonstrates that confederate memorials are consolidated into only portion of the states, it is nice to be able to visual see how these states might be related. The tidyverse also gives the R user the ability to build maps quickly and easily. To get started we do need to bring in the âmapsâ package.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">require</span><span class="p">(</span><span class="n">maps</span><span class="p">)</span><span class="w">

</span><span class="n">states</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map_data</span><span class="p">(</span><span class="s1">'state'</span><span class="p">)</span><span class="w">

</span><span class="n">states_all</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">region</span><span class="o">=</span><span class="n">unique</span><span class="p">(</span><span class="n">states</span><span class="o">$</span><span class="n">region</span><span class="p">))</span><span class="w">
</span><span class="n">stateMon</span><span class="o">&lt;-</span><span class="n">confMon</span><span class="o">%&gt;%</span><span class="n">group_by</span><span class="p">(</span><span class="n">state</span><span class="p">)</span><span class="o">%&gt;%</span><span class="n">summarise</span><span class="p">(</span><span class="n">count</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">mutate</span><span class="p">(</span><span class="n">region</span><span class="o">=</span><span class="n">tolower</span><span class="p">(</span><span class="n">state</span><span class="p">))</span><span class="w">
</span><span class="n">stateMon</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">left_join</span><span class="p">(</span><span class="n">states_all</span><span class="p">,</span><span class="n">stateMon</span><span class="p">,</span><span class="n">by</span><span class="o">=</span><span class="s1">'region'</span><span class="p">)</span><span class="w">

</span><span class="n">ggplot</span><span class="p">()</span><span class="o">+</span><span class="w">
  </span><span class="n">theme_bw</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">panel.background</span><span class="o">=</span><span class="n">element_rect</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="s2">"#F0F0F0"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">plot.background</span><span class="o">=</span><span class="n">element_rect</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="s2">"#F0F0F0"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">panel.border</span><span class="o">=</span><span class="n">element_rect</span><span class="p">(</span><span class="n">colour</span><span class="o">=</span><span class="s2">"#F0F0F0"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="c1"># Format the grid</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.title.x</span><span class="o">=</span><span class="n">element_blank</span><span class="p">(),</span><span class="w">
        </span><span class="n">axis.text.x</span><span class="o">=</span><span class="n">element_blank</span><span class="p">(),</span><span class="w">
        </span><span class="n">axis.ticks.x</span><span class="o">=</span><span class="n">element_blank</span><span class="p">(),</span><span class="w">
        </span><span class="n">axis.title.y</span><span class="o">=</span><span class="n">element_blank</span><span class="p">(),</span><span class="w">
        </span><span class="n">axis.text.y</span><span class="o">=</span><span class="n">element_blank</span><span class="p">(),</span><span class="w">
        </span><span class="n">axis.ticks.y</span><span class="o">=</span><span class="n">element_blank</span><span class="p">())</span><span class="o">+</span><span class="w">
  </span><span class="c1"># Dispose of the legend</span><span class="w">
  </span><span class="n">theme</span><span class="p">(</span><span class="n">plot.title</span><span class="o">=</span><span class="n">element_text</span><span class="p">(</span><span class="n">face</span><span class="o">=</span><span class="s2">"bold"</span><span class="p">,</span><span class="n">hjust</span><span class="o">=</span><span class="m">0</span><span class="p">,</span><span class="n">vjust</span><span class="o">=</span><span class="m">2</span><span class="p">,</span><span class="n">colour</span><span class="o">=</span><span class="s2">"#3C3C3C"</span><span class="p">,</span><span class="n">size</span><span class="o">=</span><span class="m">14</span><span class="p">))</span><span class="o">+</span><span class="w">
  </span><span class="n">geom_map</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">states</span><span class="p">,</span><span class="w"> </span><span class="n">map</span><span class="o">=</span><span class="n">states</span><span class="p">,</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">long</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">lat</span><span class="p">,</span><span class="w"> </span><span class="n">map_id</span><span class="o">=</span><span class="n">region</span><span class="p">),</span><span class="n">fill</span><span class="o">=</span><span class="s2">"#ffffff"</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"#ffffff"</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">0.15</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_map</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">stateMon</span><span class="p">,</span><span class="n">map</span><span class="o">=</span><span class="n">states</span><span class="p">,</span><span class="n">aes</span><span class="p">(</span><span class="n">fill</span><span class="o">=</span><span class="n">count</span><span class="p">,</span><span class="n">map_id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">region</span><span class="p">),</span><span class="n">color</span><span class="o">=</span><span class="s2">"#ffffff"</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">0.15</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_fill_continuous</span><span class="p">(</span><span class="n">low</span><span class="o">=</span><span class="s1">'lightblue'</span><span class="p">,</span><span class="w"> </span><span class="n">high</span><span class="o">=</span><span class="s1">'darkblue'</span><span class="p">,</span><span class="w"> </span><span class="n">guide</span><span class="o">=</span><span class="s1">'colorbar'</span><span class="p">)</span><span class="o">+</span><span class="w">
  </span><span class="n">ggtitle</span><span class="p">(</span><span class="s2">"Number of Confederate Memorials per State"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p><img src="http://danlarson.io/static/img/unnamed-chunk-4-1.png" alt="State Map showing where confederate monuments are" /></p>

<h2 id="wrapping-up">Wrapping up</h2>

<p>Using the tibbles, tidyr, dplr, and ggplot2 allow for very quick and easy manipulation of data. With fewer then ten lines of code you are up have visualizations without filling up your environment with unneeded objects. I am still new to using the tidyverse packages and using this space to learn more about how to use them efficiently. I will continue to explore this data set, adding new elements as I think of them, to try to understand how it is impacting our current culture.</p>
 ]]></content>
</entry>



</feed>
